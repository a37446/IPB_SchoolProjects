//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace A
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::A.A_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::A.A_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::A.A_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace A.A_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::A.A_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::A.A_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::A.A_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[34];
            _typeNameTable[0] = "A.pages.AboutUs";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "A.pages.AllNewsList";
            _typeNameTable[4] = "A.ViewModel.NewsVM";
            _typeNameTable[5] = "Object";
            _typeNameTable[6] = "A.pages.Doners.A_";
            _typeNameTable[7] = "A.ViewModel.UserVM";
            _typeNameTable[8] = "A.ViewModel.MainViewModelBase";
            _typeNameTable[9] = "A.pages.Doners.AB_";
            _typeNameTable[10] = "A.pages.Doners.ABneg";
            _typeNameTable[11] = "A.pages.Doners.Aneg";
            _typeNameTable[12] = "A.pages.Doners.B_";
            _typeNameTable[13] = "A.pages.Doners.Bneg";
            _typeNameTable[14] = "A.pages.Doners.O_";
            _typeNameTable[15] = "A.pages.Doners.Oneg";
            _typeNameTable[16] = "A.pages.Forms.AddNews";
            _typeNameTable[17] = "A.pages.Forms.Record";
            _typeNameTable[18] = "A.ViewModel.DonationVM";
            _typeNameTable[19] = "A.pages.Login";
            _typeNameTable[20] = "A.pages.Forms.Register";
            _typeNameTable[21] = "A.pages.Forms.UpdateNews";
            _typeNameTable[22] = "A.pages.Forms.UserUpdate";
            _typeNameTable[23] = "A.pages.Loggedin";
            _typeNameTable[24] = "A.pages.HomePage";
            _typeNameTable[25] = "A.ViewModel.login_Controll";
            _typeNameTable[26] = "A.pages.Search";
            _typeNameTable[27] = "A.MainPage";
            _typeNameTable[28] = "A.pages.DonationRecords";
            _typeNameTable[29] = "A.ViewModel.User_DonationVM";
            _typeNameTable[30] = "A.pages.DonorsNearMe";
            _typeNameTable[31] = "A.pages.MyContentPage";
            _typeNameTable[32] = "A.pages.SettingsPage";
            _typeNameTable[33] = "A.ViewModel.Authentication";

            _typeTable = new global::System.Type[34];
            _typeTable[0] = typeof(global::A.pages.AboutUs);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::A.pages.AllNewsList);
            _typeTable[4] = typeof(global::A.ViewModel.NewsVM);
            _typeTable[5] = typeof(global::System.Object);
            _typeTable[6] = typeof(global::A.pages.Doners.A_);
            _typeTable[7] = typeof(global::A.ViewModel.UserVM);
            _typeTable[8] = typeof(global::A.ViewModel.MainViewModelBase);
            _typeTable[9] = typeof(global::A.pages.Doners.AB_);
            _typeTable[10] = typeof(global::A.pages.Doners.ABneg);
            _typeTable[11] = typeof(global::A.pages.Doners.Aneg);
            _typeTable[12] = typeof(global::A.pages.Doners.B_);
            _typeTable[13] = typeof(global::A.pages.Doners.Bneg);
            _typeTable[14] = typeof(global::A.pages.Doners.O_);
            _typeTable[15] = typeof(global::A.pages.Doners.Oneg);
            _typeTable[16] = typeof(global::A.pages.Forms.AddNews);
            _typeTable[17] = typeof(global::A.pages.Forms.Record);
            _typeTable[18] = typeof(global::A.ViewModel.DonationVM);
            _typeTable[19] = typeof(global::A.pages.Login);
            _typeTable[20] = typeof(global::A.pages.Forms.Register);
            _typeTable[21] = typeof(global::A.pages.Forms.UpdateNews);
            _typeTable[22] = typeof(global::A.pages.Forms.UserUpdate);
            _typeTable[23] = typeof(global::A.pages.Loggedin);
            _typeTable[24] = typeof(global::A.pages.HomePage);
            _typeTable[25] = typeof(global::A.ViewModel.login_Controll);
            _typeTable[26] = typeof(global::A.pages.Search);
            _typeTable[27] = typeof(global::A.MainPage);
            _typeTable[28] = typeof(global::A.pages.DonationRecords);
            _typeTable[29] = typeof(global::A.ViewModel.User_DonationVM);
            _typeTable[30] = typeof(global::A.pages.DonorsNearMe);
            _typeTable[31] = typeof(global::A.pages.MyContentPage);
            _typeTable[32] = typeof(global::A.pages.SettingsPage);
            _typeTable[33] = typeof(global::A.ViewModel.Authentication);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AboutUs() { return new global::A.pages.AboutUs(); }
        private object Activate_3_AllNewsList() { return new global::A.pages.AllNewsList(); }
        private object Activate_4_NewsVM() { return new global::A.ViewModel.NewsVM(); }
        private object Activate_6_A_() { return new global::A.pages.Doners.A_(); }
        private object Activate_7_UserVM() { return new global::A.ViewModel.UserVM(); }
        private object Activate_9_AB_() { return new global::A.pages.Doners.AB_(); }
        private object Activate_10_ABneg() { return new global::A.pages.Doners.ABneg(); }
        private object Activate_11_Aneg() { return new global::A.pages.Doners.Aneg(); }
        private object Activate_12_B_() { return new global::A.pages.Doners.B_(); }
        private object Activate_13_Bneg() { return new global::A.pages.Doners.Bneg(); }
        private object Activate_14_O_() { return new global::A.pages.Doners.O_(); }
        private object Activate_15_Oneg() { return new global::A.pages.Doners.Oneg(); }
        private object Activate_16_AddNews() { return new global::A.pages.Forms.AddNews(); }
        private object Activate_17_Record() { return new global::A.pages.Forms.Record(); }
        private object Activate_18_DonationVM() { return new global::A.ViewModel.DonationVM(); }
        private object Activate_19_Login() { return new global::A.pages.Login(); }
        private object Activate_20_Register() { return new global::A.pages.Forms.Register(); }
        private object Activate_21_UpdateNews() { return new global::A.pages.Forms.UpdateNews(); }
        private object Activate_22_UserUpdate() { return new global::A.pages.Forms.UserUpdate(); }
        private object Activate_23_Loggedin() { return new global::A.pages.Loggedin(); }
        private object Activate_24_HomePage() { return new global::A.pages.HomePage(); }
        private object Activate_25_login_Controll() { return new global::A.ViewModel.login_Controll(); }
        private object Activate_26_Search() { return new global::A.pages.Search(); }
        private object Activate_27_MainPage() { return new global::A.MainPage(); }
        private object Activate_28_DonationRecords() { return new global::A.pages.DonationRecords(); }
        private object Activate_29_User_DonationVM() { return new global::A.ViewModel.User_DonationVM(); }
        private object Activate_30_DonorsNearMe() { return new global::A.pages.DonorsNearMe(); }
        private object Activate_31_MyContentPage() { return new global::A.pages.MyContentPage(); }
        private object Activate_32_SettingsPage() { return new global::A.pages.SettingsPage(); }
        private object Activate_33_Authentication() { return new global::A.ViewModel.Authentication(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::A.A_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::A.A_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  A.pages.AboutUs
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_AboutUs;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::A.A_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::A.A_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  A.pages.AllNewsList
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_3_AllNewsList;
                userType.AddMemberName("news");
                userType.AddMemberName("SelectedItem");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  A.ViewModel.NewsVM
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Object
                xamlType = new global::A.A_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  A.pages.Doners.A_
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_6_A_;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  A.ViewModel.UserVM
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("A.ViewModel.MainViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  A.ViewModel.MainViewModelBase
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  A.pages.Doners.AB_
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_9_AB_;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  A.pages.Doners.ABneg
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_ABneg;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  A.pages.Doners.Aneg
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_Aneg;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  A.pages.Doners.B_
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_B_;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  A.pages.Doners.Bneg
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_Bneg;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  A.pages.Doners.O_
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_O_;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  A.pages.Doners.Oneg
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_Oneg;
                userType.AddMemberName("user");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  A.pages.Forms.AddNews
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_AddNews;
                userType.AddMemberName("newsVm");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  A.pages.Forms.Record
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_Record;
                userType.AddMemberName("user_DonationVM");
                userType.AddMemberName("login");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  A.ViewModel.DonationVM
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  A.pages.Login
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_Login;
                userType.AddMemberName("userVM");
                userType.AddMemberName("home");
                userType.AddMemberName("logincontroll");
                userType.AddMemberName("search");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  A.pages.Forms.Register
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_Register;
                userType.AddMemberName("UserVM");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  A.pages.Forms.UpdateNews
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_UpdateNews;
                userType.AddMemberName("news");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  A.pages.Forms.UserUpdate
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_22_UserUpdate;
                userType.AddMemberName("user");
                userType.AddMemberName("login");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  A.pages.Loggedin
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_Loggedin;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  A.pages.HomePage
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_HomePage;
                userType.AddMemberName("userVM");
                userType.AddMemberName("logincontroll");
                userType.AddMemberName("news");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  A.ViewModel.login_Controll
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  A.pages.Search
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_Search;
                userType.AddMemberName("user");
                userType.AddMemberName("login");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  A.MainPage
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  A.pages.DonationRecords
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_DonationRecords;
                userType.AddMemberName("userVM");
                userType.AddMemberName("donationVM");
                userType.AddMemberName("Ud");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  A.ViewModel.User_DonationVM
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  A.pages.DonorsNearMe
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_DonorsNearMe;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  A.pages.MyContentPage
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_MyContentPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  A.pages.SettingsPage
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_SettingsPage;
                userType.AddMemberName("user");
                userType.AddMemberName("log");
                userType.AddMemberName("auth");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  A.ViewModel.Authentication
                userType = new global::A.A_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_AllNewsList_news(object instance)
        {
            var that = (global::A.pages.AllNewsList)instance;
            return that.news;
        }
        private void set_0_AllNewsList_news(object instance, object Value)
        {
            var that = (global::A.pages.AllNewsList)instance;
            that.news = (global::A.ViewModel.NewsVM)Value;
        }
        private object get_1_AllNewsList_SelectedItem(object instance)
        {
            var that = (global::A.pages.AllNewsList)instance;
            return that.SelectedItem;
        }
        private void set_1_AllNewsList_SelectedItem(object instance, object Value)
        {
            var that = (global::A.pages.AllNewsList)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_2_A__user(object instance)
        {
            var that = (global::A.pages.Doners.A_)instance;
            return that.user;
        }
        private void set_2_A__user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.A_)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_3_AB__user(object instance)
        {
            var that = (global::A.pages.Doners.AB_)instance;
            return that.user;
        }
        private void set_3_AB__user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.AB_)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_4_ABneg_user(object instance)
        {
            var that = (global::A.pages.Doners.ABneg)instance;
            return that.user;
        }
        private void set_4_ABneg_user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.ABneg)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_5_Aneg_user(object instance)
        {
            var that = (global::A.pages.Doners.Aneg)instance;
            return that.user;
        }
        private void set_5_Aneg_user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.Aneg)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_6_B__user(object instance)
        {
            var that = (global::A.pages.Doners.B_)instance;
            return that.user;
        }
        private void set_6_B__user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.B_)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_7_Bneg_user(object instance)
        {
            var that = (global::A.pages.Doners.Bneg)instance;
            return that.user;
        }
        private void set_7_Bneg_user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.Bneg)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_8_O__user(object instance)
        {
            var that = (global::A.pages.Doners.O_)instance;
            return that.user;
        }
        private void set_8_O__user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.O_)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_9_Oneg_user(object instance)
        {
            var that = (global::A.pages.Doners.Oneg)instance;
            return that.user;
        }
        private void set_9_Oneg_user(object instance, object Value)
        {
            var that = (global::A.pages.Doners.Oneg)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_10_AddNews_newsVm(object instance)
        {
            var that = (global::A.pages.Forms.AddNews)instance;
            return that.newsVm;
        }
        private void set_10_AddNews_newsVm(object instance, object Value)
        {
            var that = (global::A.pages.Forms.AddNews)instance;
            that.newsVm = (global::A.ViewModel.NewsVM)Value;
        }
        private object get_11_Record_user_DonationVM(object instance)
        {
            var that = (global::A.pages.Forms.Record)instance;
            return that.user_DonationVM;
        }
        private void set_11_Record_user_DonationVM(object instance, object Value)
        {
            var that = (global::A.pages.Forms.Record)instance;
            that.user_DonationVM = (global::A.ViewModel.DonationVM)Value;
        }
        private object get_12_Record_login(object instance)
        {
            var that = (global::A.pages.Forms.Record)instance;
            return that.login;
        }
        private void set_12_Record_login(object instance, object Value)
        {
            var that = (global::A.pages.Forms.Record)instance;
            that.login = (global::A.pages.Login)Value;
        }
        private object get_13_Register_UserVM(object instance)
        {
            var that = (global::A.pages.Forms.Register)instance;
            return that.UserVM;
        }
        private void set_13_Register_UserVM(object instance, object Value)
        {
            var that = (global::A.pages.Forms.Register)instance;
            that.UserVM = (global::A.ViewModel.UserVM)Value;
        }
        private object get_14_UpdateNews_news(object instance)
        {
            var that = (global::A.pages.Forms.UpdateNews)instance;
            return that.news;
        }
        private void set_14_UpdateNews_news(object instance, object Value)
        {
            var that = (global::A.pages.Forms.UpdateNews)instance;
            that.news = (global::A.ViewModel.NewsVM)Value;
        }
        private object get_15_UserUpdate_user(object instance)
        {
            var that = (global::A.pages.Forms.UserUpdate)instance;
            return that.user;
        }
        private void set_15_UserUpdate_user(object instance, object Value)
        {
            var that = (global::A.pages.Forms.UserUpdate)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_16_UserUpdate_login(object instance)
        {
            var that = (global::A.pages.Forms.UserUpdate)instance;
            return that.login;
        }
        private void set_16_UserUpdate_login(object instance, object Value)
        {
            var that = (global::A.pages.Forms.UserUpdate)instance;
            that.login = (global::A.pages.Login)Value;
        }
        private object get_17_Login_userVM(object instance)
        {
            var that = (global::A.pages.Login)instance;
            return that.userVM;
        }
        private void set_17_Login_userVM(object instance, object Value)
        {
            var that = (global::A.pages.Login)instance;
            that.userVM = (global::A.ViewModel.UserVM)Value;
        }
        private object get_18_Login_home(object instance)
        {
            var that = (global::A.pages.Login)instance;
            return that.home;
        }
        private void set_18_Login_home(object instance, object Value)
        {
            var that = (global::A.pages.Login)instance;
            that.home = (global::A.pages.HomePage)Value;
        }
        private object get_19_Login_logincontroll(object instance)
        {
            var that = (global::A.pages.Login)instance;
            return that.logincontroll;
        }
        private void set_19_Login_logincontroll(object instance, object Value)
        {
            var that = (global::A.pages.Login)instance;
            that.logincontroll = (global::A.ViewModel.login_Controll)Value;
        }
        private object get_20_Login_search(object instance)
        {
            var that = (global::A.pages.Login)instance;
            return that.search;
        }
        private void set_20_Login_search(object instance, object Value)
        {
            var that = (global::A.pages.Login)instance;
            that.search = (global::A.pages.Search)Value;
        }
        private object get_21_DonationRecords_userVM(object instance)
        {
            var that = (global::A.pages.DonationRecords)instance;
            return that.userVM;
        }
        private void set_21_DonationRecords_userVM(object instance, object Value)
        {
            var that = (global::A.pages.DonationRecords)instance;
            that.userVM = (global::A.ViewModel.UserVM)Value;
        }
        private object get_22_DonationRecords_donationVM(object instance)
        {
            var that = (global::A.pages.DonationRecords)instance;
            return that.donationVM;
        }
        private void set_22_DonationRecords_donationVM(object instance, object Value)
        {
            var that = (global::A.pages.DonationRecords)instance;
            that.donationVM = (global::A.ViewModel.DonationVM)Value;
        }
        private object get_23_DonationRecords_Ud(object instance)
        {
            var that = (global::A.pages.DonationRecords)instance;
            return that.Ud;
        }
        private void set_23_DonationRecords_Ud(object instance, object Value)
        {
            var that = (global::A.pages.DonationRecords)instance;
            that.Ud = (global::A.ViewModel.User_DonationVM)Value;
        }
        private object get_24_HomePage_userVM(object instance)
        {
            var that = (global::A.pages.HomePage)instance;
            return that.userVM;
        }
        private void set_24_HomePage_userVM(object instance, object Value)
        {
            var that = (global::A.pages.HomePage)instance;
            that.userVM = (global::A.ViewModel.UserVM)Value;
        }
        private object get_25_HomePage_logincontroll(object instance)
        {
            var that = (global::A.pages.HomePage)instance;
            return that.logincontroll;
        }
        private void set_25_HomePage_logincontroll(object instance, object Value)
        {
            var that = (global::A.pages.HomePage)instance;
            that.logincontroll = (global::A.ViewModel.login_Controll)Value;
        }
        private object get_26_HomePage_news(object instance)
        {
            var that = (global::A.pages.HomePage)instance;
            return that.news;
        }
        private void set_26_HomePage_news(object instance, object Value)
        {
            var that = (global::A.pages.HomePage)instance;
            that.news = (global::A.ViewModel.NewsVM)Value;
        }
        private object get_27_Search_user(object instance)
        {
            var that = (global::A.pages.Search)instance;
            return that.user;
        }
        private void set_27_Search_user(object instance, object Value)
        {
            var that = (global::A.pages.Search)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_28_Search_login(object instance)
        {
            var that = (global::A.pages.Search)instance;
            return that.login;
        }
        private void set_28_Search_login(object instance, object Value)
        {
            var that = (global::A.pages.Search)instance;
            that.login = (global::A.pages.Login)Value;
        }
        private object get_29_SettingsPage_user(object instance)
        {
            var that = (global::A.pages.SettingsPage)instance;
            return that.user;
        }
        private void set_29_SettingsPage_user(object instance, object Value)
        {
            var that = (global::A.pages.SettingsPage)instance;
            that.user = (global::A.ViewModel.UserVM)Value;
        }
        private object get_30_SettingsPage_log(object instance)
        {
            var that = (global::A.pages.SettingsPage)instance;
            return that.log;
        }
        private void set_30_SettingsPage_log(object instance, object Value)
        {
            var that = (global::A.pages.SettingsPage)instance;
            that.log = (global::A.pages.Login)Value;
        }
        private object get_31_SettingsPage_auth(object instance)
        {
            var that = (global::A.pages.SettingsPage)instance;
            return that.auth;
        }
        private void set_31_SettingsPage_auth(object instance, object Value)
        {
            var that = (global::A.pages.SettingsPage)instance;
            that.auth = (global::A.ViewModel.Authentication)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::A.A_XamlTypeInfo.XamlMember xamlMember = null;
            global::A.A_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "A.pages.AllNewsList.news":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.AllNewsList");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "news", "A.ViewModel.NewsVM");
                xamlMember.Getter = get_0_AllNewsList_news;
                xamlMember.Setter = set_0_AllNewsList_news;
                break;
            case "A.pages.AllNewsList.SelectedItem":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.AllNewsList");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.Getter = get_1_AllNewsList_SelectedItem;
                xamlMember.Setter = set_1_AllNewsList_SelectedItem;
                break;
            case "A.pages.Doners.A_.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.A_");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_2_A__user;
                xamlMember.Setter = set_2_A__user;
                break;
            case "A.pages.Doners.AB_.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.AB_");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_3_AB__user;
                xamlMember.Setter = set_3_AB__user;
                break;
            case "A.pages.Doners.ABneg.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.ABneg");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_4_ABneg_user;
                xamlMember.Setter = set_4_ABneg_user;
                break;
            case "A.pages.Doners.Aneg.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.Aneg");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_5_Aneg_user;
                xamlMember.Setter = set_5_Aneg_user;
                break;
            case "A.pages.Doners.B_.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.B_");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_6_B__user;
                xamlMember.Setter = set_6_B__user;
                break;
            case "A.pages.Doners.Bneg.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.Bneg");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_7_Bneg_user;
                xamlMember.Setter = set_7_Bneg_user;
                break;
            case "A.pages.Doners.O_.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.O_");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_8_O__user;
                xamlMember.Setter = set_8_O__user;
                break;
            case "A.pages.Doners.Oneg.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Doners.Oneg");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_9_Oneg_user;
                xamlMember.Setter = set_9_Oneg_user;
                break;
            case "A.pages.Forms.AddNews.newsVm":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.AddNews");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "newsVm", "A.ViewModel.NewsVM");
                xamlMember.Getter = get_10_AddNews_newsVm;
                xamlMember.Setter = set_10_AddNews_newsVm;
                break;
            case "A.pages.Forms.Record.user_DonationVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.Record");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user_DonationVM", "A.ViewModel.DonationVM");
                xamlMember.Getter = get_11_Record_user_DonationVM;
                xamlMember.Setter = set_11_Record_user_DonationVM;
                break;
            case "A.pages.Forms.Record.login":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.Record");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "login", "A.pages.Login");
                xamlMember.Getter = get_12_Record_login;
                xamlMember.Setter = set_12_Record_login;
                break;
            case "A.pages.Forms.Register.UserVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.Register");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "UserVM", "A.ViewModel.UserVM");
                xamlMember.Getter = get_13_Register_UserVM;
                xamlMember.Setter = set_13_Register_UserVM;
                break;
            case "A.pages.Forms.UpdateNews.news":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.UpdateNews");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "news", "A.ViewModel.NewsVM");
                xamlMember.Getter = get_14_UpdateNews_news;
                xamlMember.Setter = set_14_UpdateNews_news;
                break;
            case "A.pages.Forms.UserUpdate.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.UserUpdate");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_15_UserUpdate_user;
                xamlMember.Setter = set_15_UserUpdate_user;
                break;
            case "A.pages.Forms.UserUpdate.login":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Forms.UserUpdate");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "login", "A.pages.Login");
                xamlMember.Getter = get_16_UserUpdate_login;
                xamlMember.Setter = set_16_UserUpdate_login;
                break;
            case "A.pages.Login.userVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Login");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "userVM", "A.ViewModel.UserVM");
                xamlMember.Getter = get_17_Login_userVM;
                xamlMember.Setter = set_17_Login_userVM;
                break;
            case "A.pages.Login.home":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Login");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "home", "A.pages.HomePage");
                xamlMember.Getter = get_18_Login_home;
                xamlMember.Setter = set_18_Login_home;
                break;
            case "A.pages.Login.logincontroll":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Login");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "logincontroll", "A.ViewModel.login_Controll");
                xamlMember.Getter = get_19_Login_logincontroll;
                xamlMember.Setter = set_19_Login_logincontroll;
                break;
            case "A.pages.Login.search":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Login");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "search", "A.pages.Search");
                xamlMember.Getter = get_20_Login_search;
                xamlMember.Setter = set_20_Login_search;
                break;
            case "A.pages.DonationRecords.userVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.DonationRecords");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "userVM", "A.ViewModel.UserVM");
                xamlMember.Getter = get_21_DonationRecords_userVM;
                xamlMember.Setter = set_21_DonationRecords_userVM;
                break;
            case "A.pages.DonationRecords.donationVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.DonationRecords");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "donationVM", "A.ViewModel.DonationVM");
                xamlMember.Getter = get_22_DonationRecords_donationVM;
                xamlMember.Setter = set_22_DonationRecords_donationVM;
                break;
            case "A.pages.DonationRecords.Ud":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.DonationRecords");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "Ud", "A.ViewModel.User_DonationVM");
                xamlMember.Getter = get_23_DonationRecords_Ud;
                xamlMember.Setter = set_23_DonationRecords_Ud;
                break;
            case "A.pages.HomePage.userVM":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.HomePage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "userVM", "A.ViewModel.UserVM");
                xamlMember.Getter = get_24_HomePage_userVM;
                xamlMember.Setter = set_24_HomePage_userVM;
                break;
            case "A.pages.HomePage.logincontroll":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.HomePage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "logincontroll", "A.ViewModel.login_Controll");
                xamlMember.Getter = get_25_HomePage_logincontroll;
                xamlMember.Setter = set_25_HomePage_logincontroll;
                break;
            case "A.pages.HomePage.news":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.HomePage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "news", "A.ViewModel.NewsVM");
                xamlMember.Getter = get_26_HomePage_news;
                xamlMember.Setter = set_26_HomePage_news;
                break;
            case "A.pages.Search.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Search");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_27_Search_user;
                xamlMember.Setter = set_27_Search_user;
                break;
            case "A.pages.Search.login":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.Search");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "login", "A.pages.Login");
                xamlMember.Getter = get_28_Search_login;
                xamlMember.Setter = set_28_Search_login;
                break;
            case "A.pages.SettingsPage.user":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.SettingsPage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "user", "A.ViewModel.UserVM");
                xamlMember.Getter = get_29_SettingsPage_user;
                xamlMember.Setter = set_29_SettingsPage_user;
                break;
            case "A.pages.SettingsPage.log":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.SettingsPage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "log", "A.pages.Login");
                xamlMember.Getter = get_30_SettingsPage_log;
                xamlMember.Setter = set_30_SettingsPage_log;
                break;
            case "A.pages.SettingsPage.auth":
                userType = (global::A.A_XamlTypeInfo.XamlUserType)GetXamlTypeByName("A.pages.SettingsPage");
                xamlMember = new global::A.A_XamlTypeInfo.XamlMember(this, "auth", "A.ViewModel.Authentication");
                xamlMember.Getter = get_31_SettingsPage_auth;
                xamlMember.Setter = set_31_SettingsPage_auth;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::A.A_XamlTypeInfo.XamlSystemBaseType
    {
        global::A.A_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::A.A_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::A.A_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::A.A_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

